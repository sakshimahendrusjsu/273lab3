{"ast":null,"code":"import _defineProperty from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/ManageOrders/BuyerOrder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Collapse, Navbar, Card, CardImg, CardText, CardBody, Button, CardTitle, CardSubtitle, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getOrderDeatilsBuyer } from '../Redux/actions/orderActions'; // a little function to help us with reordering the result\n\nconst reorder = (list, startIndex, endIndex) => {\n  console.log(\"reorder list\", list);\n  console.log(\"startIndex\", startIndex);\n  const result = Array.from(list);\n\n  const _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\r\n * Moves an item from one list to another list.\r\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n\n  const _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n        _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n        removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'lightpurple'\n}, draggableStyle);\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'white',\n  padding: grid // width: 250\n\n});\n\nclass BuyerOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.id2List = {\n      droppable: 'list1',\n      droppable2: 'list2'\n    };\n\n    this.getList = id => this.state[this.id2List[id]];\n\n    this.onDragEnd = result => {\n      const source = result.source,\n            destination = result.destination;\n      console.log(\"result\", result); // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      console.log(\"onDragEnd\");\n      console.log(\"source\", source);\n      console.log(\"destination\", destination);\n\n      if (source.droppableId === destination.droppableId) {\n        const items = reorder(this.getList(source.droppableId), source.index, destination.index);\n\n        if (source.droppableId === 'droppable2') {\n          this.setState({\n            list2: items\n          });\n        } else {\n          this.setState({\n            list1: items\n          });\n        } // this.setState(state);\n\n      } else {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        this.setState({\n          list1: result.droppable,\n          list2: result.droppable2\n        });\n      }\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      rows: [],\n      status: \"\",\n      results: [],\n      orderItems: [],\n      list1: [],\n      list2: [] // items: getItems(10),\n      // selected: getItems(5, 10)\n\n    };\n  }\n  /**\r\n   * A semi-generic way to handle multiple lists. Matches\r\n   * the IDs of the droppable container to the names of the\r\n   * source arrays stored in the state.\r\n   */\n\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  submitSignIn(e, status) {\n    console.log(\"stats\", status);\n    this.state.status = status;\n    this.renderMyData();\n  }\n\n  async renderMyData() {\n    this.setState({\n      results: []\n    });\n    console.log(\"CURRENT STATE\", this.state.status);\n    await this.props.getOrderDeatilsBuyer(this.state.status);\n    console.log(this.props.orderItems);\n    this.setOrderDetails();\n  }\n\n  setOrderDetails() {\n    console.log(\"setOrderDetails\");\n\n    if (this.props.orderItems != undefined) {\n      let len = this.props.orderItems.length;\n      console.log(Math.floor(len / 2));\n      let even = len % 2 == 0 ? Math.floor(len / 2) : Math.floor(len / 2) + 1;\n      let odd = Math.floor(len / 2);\n      this.props.orderItems.map((item, index) => {\n        if (item.list_index == null) {\n          if (even > 0) {\n            item.list_index = even;\n            item.div_index = 0;\n            even--;\n          } else {\n            if (odd > 0) {\n              item.list_index = odd;\n              item.div_index = 1;\n              even--;\n            }\n          }\n        } else if (item.div_index == 1) {\n          odd--;\n        } else if (item.div_index == 0) {\n          even--;\n        }\n\n        item.id = index + 1;\n      });\n      this.state.list1 = this.props.orderItems.filter(item => item.div_index === 0);\n      console.log(\"lit1\", this.state.list1);\n      this.state.list2 = this.props.orderItems.filter(item => item.div_index === 1);\n      console.log(\"lit2\", this.state.list2);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"light\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"GRUBHUB\"), React.createElement(NavbarToggler, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      nav: true,\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Hi,\", this.props.first), React.createElement(DropdownMenu, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      href: \"/order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Orders\"), React.createElement(DropdownItem, {\n      href: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Account\"), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      href: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Logout\")))))), React.createElement(\"h1\", {\n      id: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"My Orders\"), React.createElement(Nav, {\n      pills: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      active: true,\n      onClick: e => this.submitSignIn(e, \"NEW\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"NEW\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: e => this.submitSignIn(e, \"PREPARING\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"PREPARING\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: e => this.submitSignIn(e, \"READY\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"READY\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: e => this.submitSignIn(e, \"DELIVERED\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"PAST ORDERS\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: e => this.submitSignIn(e, \"CANCELLED\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"CANCELLED\")))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.list1.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Card, {\n      body: true,\n      inverse: true,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Order Id # \", item._id, \"    .\", React.createElement(Link, {\n      to: {\n        pathname: '/chat',\n        state: {\n          orderId: item,\n          userId: item.buyer_email,\n          userId2: item.restaurant_name,\n          id: item.buyer_id\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" Need Help?\"))), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Restuarant Name : \", item.restaurant_name), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Order status : \", item.status, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), \"Total : \", item.total_price)))))), provided.placeholder)), React.createElement(Droppable, {\n      droppableId: \"droppable2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.state.list2.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Card, {\n      body: true,\n      inverse: true,\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Order Id #\", item._id, \"     .\", React.createElement(Link, {\n      to: {\n        pathname: '/chat',\n        state: {\n          orderId: item\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Need Help?\"))), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Restuarant Name : \", item.restaurant_name), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Order status : \", item.status, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), \"Total :\", item.total_price)))))), provided.placeholder)))));\n  }\n\n}\n\nfunction mapStateToProps(store) {\n  return {\n    output: store.order.ouput,\n    message: store.order.message,\n    orderItems: store.order.orderItems\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getOrderDeatilsBuyer: data => dispatch(getOrderDeatilsBuyer(data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyerOrder);","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/ManageOrders/BuyerOrder.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","Collapse","Navbar","Card","CardImg","CardText","CardBody","Button","CardTitle","CardSubtitle","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","connect","Link","getOrderDeatilsBuyer","reorder","list","startIndex","endIndex","console","log","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","BuyerOrder","constructor","props","id2List","droppable","droppable2","getList","id","state","onDragEnd","items","setState","list2","list1","toggle","bind","rows","status","results","orderItems","isOpen","submitSignIn","e","renderMyData","setOrderDetails","undefined","len","length","Math","floor","even","odd","map","item","list_index","div_index","filter","render","first","display","flexDirection","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","_id","pathname","orderId","userId","buyer_email","userId2","restaurant_name","buyer_id","total_price","placeholder","mapStateToProps","store","output","order","ouput","message","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Collapse, Navbar,  Card, CardImg, CardText, CardBody,Button,\r\n  CardTitle, CardSubtitle,NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { getOrderDeatilsBuyer } from '../Redux/actions/orderActions';\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  console.log(\"reorder list\", list);\r\n  console.log(\"startIndex\", startIndex);\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'lightpurple',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? 'lightblue' : 'white',\r\n  padding: grid,\r\n  // width: 250\r\n});\r\n\r\nclass BuyerOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      rows: [],\r\n      status: \"\",\r\n      results: [],\r\n      orderItems: [],\r\n      list1: [],\r\n      list2: [],\r\n      // items: getItems(10),\r\n      // selected: getItems(5, 10)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A semi-generic way to handle multiple lists. Matches\r\n   * the IDs of the droppable container to the names of the\r\n   * source arrays stored in the state.\r\n   */\r\n  id2List = {\r\n    droppable: 'list1',\r\n    droppable2: 'list2'\r\n  };\r\n\r\n  getList = id => this.state[this.id2List[id]];\r\n\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n    console.log(\"result\", result);\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    console.log(\"onDragEnd\");\r\n    console.log(\"source\", source);\r\n    console.log(\"destination\", destination);\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(\r\n        this.getList(source.droppableId),\r\n        source.index,\r\n        destination.index\r\n      );\r\n\r\n      if (source.droppableId === 'droppable2') {\r\n        this.setState({ list2: items });\r\n      } else {\r\n        this.setState({ list1: items });\r\n      }\r\n      // this.setState(state);\r\n    } else {\r\n      const result = move(\r\n        this.getList(source.droppableId),\r\n        this.getList(destination.droppableId),\r\n        source,\r\n        destination\r\n      );\r\n      this.setState({\r\n        list1: result.droppable,\r\n        list2: result.droppable2\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  submitSignIn(e, status) {\r\n    console.log(\"stats\", status)\r\n    this.state.status = status;\r\n    this.renderMyData();\r\n  }\r\n\r\n  async renderMyData() {\r\n    this.setState({\r\n      results: [],\r\n    });\r\n    console.log(\"CURRENT STATE\", this.state.status);\r\n    await this.props.getOrderDeatilsBuyer(this.state.status);\r\n    console.log(this.props.orderItems);\r\n    this.setOrderDetails();\r\n  }\r\n\r\n  setOrderDetails() {\r\n    console.log(\"setOrderDetails\"); \r\n    if (this.props.orderItems != undefined) {\r\n      let len = this.props.orderItems.length;\r\n      console.log(Math.floor(len / 2));\r\n      let even = len % 2 == 0 ? Math.floor(len / 2) : Math.floor(len / 2) + 1\r\n      let odd = Math.floor(len / 2)\r\n      this.props.orderItems.map((item, index) => {\r\n        if (item.list_index == null) {\r\n          if (even > 0) {\r\n            item.list_index = even;\r\n            item.div_index = 0;\r\n            even--;\r\n          } else {\r\n            if (odd > 0) {\r\n              item.list_index = odd;\r\n              item.div_index = 1;\r\n              even--;\r\n            }\r\n          }\r\n        } else if (item.div_index == 1) {\r\n          odd--;\r\n        } else if (item.div_index == 0) {\r\n          even--;\r\n        }\r\n        item.id = index + 1\r\n      }\r\n      );\r\n\r\n      this.state.list1 = this.props.orderItems.filter(item => item.div_index === 0);\r\n      console.log(\"lit1\", this.state.list1);\r\n      this.state.list2 = this.props.orderItems.filter(item => item.div_index === 1);\r\n      console.log(\"lit2\", this.state.list2);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div><div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">GRUBHUB</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Hi,{this.props.first}\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem href=\"/order\">\r\n                    Orders\r\n                          </DropdownItem>\r\n                  <DropdownItem href=\"/profile\">\r\n                    Account\r\n                          </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem href=\"/logout\">\r\n                    Logout\r\n                          </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        <h1 id>My Orders</h1>\r\n        <Nav pills>\r\n          <NavItem>\r\n            <NavLink active onClick={(e) => this.submitSignIn(e, \"NEW\")}>NEW</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink onClick={(e) => this.submitSignIn(e, \"PREPARING\")}>PREPARING</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink onClick={(e) => this.submitSignIn(e, \"READY\")}>READY</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink onClick={(e) => this.submitSignIn(e, \"DELIVERED\")}>PAST ORDERS</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink onClick={(e) => this.submitSignIn(e, \"CANCELLED\")}>CANCELLED</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n        <div style={{ display: 'flex', flexDirection: 'row' } }>\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}>\r\n                  {this.state.list1.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}>\r\n                          <Card body inverse color=\"warning\">\r\n                            <CardBody>\r\n                              <CardTitle>Order Id # {item._id}    .   \r\n                              <Link to={{ pathname: '/chat', state: {orderId:item,userId:item.buyer_email,userId2:item.restaurant_name,id:item.buyer_id}}}><Button variant=\"outline-danger\"> Need Help?</Button></Link>\r\n                              </CardTitle>\r\n                              <CardSubtitle>Restuarant Name : {item.restaurant_name}</CardSubtitle>\r\n                              <CardText>Order status : {item.status}<br></br>\r\n                              Total : {item.total_price}</CardText>\r\n                            </CardBody>\r\n                            \r\n                          </Card>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <Droppable droppableId=\"droppable2\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}>\r\n                  {this.state.list2.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}>\r\n                          <Card body inverse color=\"info\">\r\n                            <CardBody>\r\n                              <CardTitle>Order Id #{item._id}     .\r\n                              <Link to={{ pathname: '/chat', state: {orderId:item}}}><Button variant=\"outline-danger\">Need Help?</Button></Link>\r\n                              </CardTitle>\r\n                              <CardSubtitle>Restuarant Name : {item.restaurant_name}</CardSubtitle>\r\n                              <CardText>Order status : {item.status}<br></br>\r\n                              Total :{item.total_price}</CardText>\r\n                            </CardBody>\r\n                          </Card>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n      output: store.order.ouput,\r\n      message: store.order.message,\r\n     orderItems: store.order.orderItems\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n      getOrderDeatilsBuyer :(data) => dispatch(getOrderDeatilsBuyer(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyerOrder)\r\n"]},"metadata":{},"sourceType":"module"}