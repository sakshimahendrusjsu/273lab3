{"ast":null,"code":"import { GET_CART, SET_PRICE, SET_ORDER, DEL_ITEMS, GET_ORDER, ORDER_STATUS } from '../constants/actionsConstants';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { HOST } from '../constants/host';\nexport function getCartItems() {\n  console.log(\"get cart items action \");\n  let cartData;\n\n  if (localStorage.getItem('cartItems')) {\n    cartData = {\n      cartItems: JSON.parse(localStorage.getItem('cartItems'))\n    };\n    console.log(\"action caritmes\", cartData);\n    return dispatch => dispatch(updateCartItems(cartData));\n  }\n}\n\nfunction updateCartItems(cartData) {\n  return {\n    type: GET_CART,\n    payload: cartData\n  };\n}\n\nexport function setPrice(price) {\n  console.log(\"set price called \", price);\n  let data = {\n    'price': price\n  };\n  return dispatch => {\n    dispatch(updatePrice(data));\n  };\n}\n\nfunction updatePrice(data) {\n  return {\n    type: SET_PRICE,\n    payload: data.price\n  };\n}\n\nexport function placeOrder(data) {\n  console.log(\"place order \", data);\n  let user = cookie.load('cookyou');\n  console.log(\"cookyou\", user);\n  let body = {\n    'cart': data.cartItems,\n    'price': data.totalPrice,\n    'email': localStorage.getItem(\"email\"),\n    'name': localStorage.getItem(\"name\"),\n    'owner_id': localStorage.getItem(\"owner_id\"),\n    'id': localStorage.getItem(\"_id\"),\n    'restaurant_name': localStorage.getItem(\"restaurant_name\") ? localStorage.getItem(\"restaurant_name\") : null,\n    'restaurant_id': localStorage.getItem(\"restaurant_id\") ? localStorage.getItem(\"restaurant_id\") : null\n  };\n  console.log(\"placing order with body\", body);\n  return dispatch => {\n    axios.post('http://' + HOST + '/morder/placeOrder', body).then(response => {\n      console.log(\"order placed\");\n      dispatch(updatePlaceOrder(response));\n    });\n  };\n}\n\nfunction updatePlaceOrder(data) {\n  localStorage.removeItem(\"restaurant_name\");\n  localStorage.removeItem(\"restaurant_id\");\n  return {\n    type: SET_ORDER,\n    payload: data\n  };\n}\n\nexport function clearCartItems() {\n  let cart = {\n    'carItems': []\n  };\n  return dispatch => {\n    dispatch(deleteCarItems(cart));\n  };\n}\n\nfunction deleteCarItems(cart) {\n  return {\n    type: DEL_ITEMS,\n    payload: cart\n  };\n}\n\nexport function getOrderDeatilsBuyer(status) {\n  let data = {\n    'status': status,\n    'id': localStorage.getItem(\"_id\"),\n    'email': localStorage.getItem(\"email\")\n  };\n  return dispatch => {\n    axios.post('http://' + HOST + '/morder/getOrderDeatilsBuyer/', data).then(response => {\n      console.log(\"GET BUYER order ACTION\");\n      dispatch(updateOrderDeatils(response));\n    });\n  };\n}\nexport function getOrderDeatilsOwner(status) {\n  let data = {\n    'status': status,\n    'id': localStorage.getItem(\"_id\"),\n    'name': localStorage.getItem(\"restaurant_name\"),\n    'email': localStorage.getItem(\"email\")\n  };\n  return dispatch => {\n    axios.post('http://' + HOST + '/morder/getOrderDeatilsOwnerWithStatus/', data).then(response => {\n      console.log(\"GET order owner action\");\n      dispatch(updateOrderDeatils(response));\n    });\n  };\n}\n\nfunction updateOrderDeatils(returndata) {\n  console.log(\"in updateOrderDeatils update\", returndata);\n  return {\n    type: GET_ORDER,\n    payload: returndata\n  };\n}\n\nexport function handleStatus(body) {\n  console.log(\"handle status\", body);\n  return dispatch => {\n    axios.post('http://' + HOST + '/morder/updateStatus', body).then(response => {\n      console.log(\"handleStatus order action\");\n      dispatch(updateStatus(response));\n    });\n  };\n}\n\nfunction updateStatus(returndata) {\n  console.log(\"in updateStatus update\", returndata);\n  return {\n    type: ORDER_STATUS,\n    payload: returndata\n  };\n}","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/Redux/actions/orderActions.js"],"names":["GET_CART","SET_PRICE","SET_ORDER","DEL_ITEMS","GET_ORDER","ORDER_STATUS","axios","cookie","HOST","getCartItems","console","log","cartData","localStorage","getItem","cartItems","JSON","parse","dispatch","updateCartItems","type","payload","setPrice","price","data","updatePrice","placeOrder","user","load","body","totalPrice","post","then","response","updatePlaceOrder","removeItem","clearCartItems","cart","deleteCarItems","getOrderDeatilsBuyer","status","updateOrderDeatils","getOrderDeatilsOwner","returndata","handleStatus","updateStatus"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,EAAyCC,SAAzC,EAAoDC,SAApD,EAAgEC,YAAhE,QAAmF,+BAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAIC,QAAJ;;AACA,MAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACrCF,IAAAA,QAAQ,GAAG;AACTG,MAAAA,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;AADF,KAAX;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,QAA/B;AACA,WAAQM,QAAD,IAAcA,QAAQ,CAACC,eAAe,CAACP,QAAD,CAAhB,CAA7B;AACD;AACF;;AACD,SAASO,eAAT,CAAyBP,QAAzB,EAAmC;AACjC,SAAO;AAAEQ,IAAAA,IAAI,EAAEpB,QAAR;AAAkBqB,IAAAA,OAAO,EAAET;AAA3B,GAAP;AACD;;AAGD,OAAO,SAASU,QAAT,CAAkBC,KAAlB,EAAyB;AAC9Bb,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCY,KAAjC;AACA,MAAIC,IAAI,GAAG;AACT,aAASD;AADA,GAAX;AAGA,SAAQL,QAAD,IAAc;AACrBA,IAAAA,QAAQ,CAACO,WAAW,CAACD,IAAD,CAAZ,CAAR;AACC,GAFD;AAGD;;AACD,SAASC,WAAT,CAAqBD,IAArB,EAA2B;AACzB,SAAO;AAAEJ,IAAAA,IAAI,EAAEnB,SAAR;AAAmBoB,IAAAA,OAAO,EAAEG,IAAI,CAACD;AAAjC,GAAP;AACD;;AAGD,OAAO,SAASG,UAAT,CAAoBF,IAApB,EAA0B;AAC/Bd,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Ba,IAA5B;AACA,MAAIG,IAAI,GAAGpB,MAAM,CAACqB,IAAP,CAAY,SAAZ,CAAX;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBgB,IAAvB;AACA,MAAIE,IAAI,GAAG;AACT,YAAQL,IAAI,CAACT,SADJ;AAET,aAASS,IAAI,CAACM,UAFL;AAGT,aAASjB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAHA;AAIT,YAAQD,YAAY,CAACC,OAAb,CAAqB,MAArB,CAJC;AAKT,gBAAYD,YAAY,CAACC,OAAb,CAAqB,UAArB,CALH;AAMT,UAAMD,YAAY,CAACC,OAAb,CAAqB,KAArB,CANG;AAOT,uBAAoBD,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAAwCD,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAxC,GAAgF,IAP3F;AAQT,qBAAkBD,YAAY,CAACC,OAAb,CAAqB,eAArB,IAAsCD,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtC,GAA4E;AARrF,GAAX;AAUAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCkB,IAAvC;AACA,SAAQX,QAAD,IAAc;AACnBZ,IAAAA,KAAK,CAACyB,IAAN,CAAW,YAAUvB,IAAV,GAAe,oBAA1B,EAAgDqB,IAAhD,EACGG,IADH,CACSC,QAAD,IAAa;AACjBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAO,MAAAA,QAAQ,CAACgB,gBAAgB,CAACD,QAAD,CAAjB,CAAR;AAAqC,KAHzC;AAID,GALD;AAMD;;AAED,SAASC,gBAAT,CAA0BV,IAA1B,EAAgC;AAC9BX,EAAAA,YAAY,CAACsB,UAAb,CAAwB,iBAAxB;AACAtB,EAAAA,YAAY,CAACsB,UAAb,CAAwB,eAAxB;AACA,SAAO;AAAEf,IAAAA,IAAI,EAAElB,SAAR;AAAmBmB,IAAAA,OAAO,EAAEG;AAA5B,GAAP;AACD;;AAGD,OAAO,SAASY,cAAT,GAA0B;AAC/B,MAAIC,IAAI,GAAE;AACT,gBAAY;AADH,GAAV;AAGA,SAAQnB,QAAD,IAAc;AAClBA,IAAAA,QAAQ,CAACoB,cAAc,CAACD,IAAD,CAAf,CAAR;AACF,GAFD;AAGD;;AACD,SAASC,cAAT,CAAwBD,IAAxB,EAA8B;AAC5B,SAAO;AAAEjB,IAAAA,IAAI,EAAEjB,SAAR;AAAmBkB,IAAAA,OAAO,EAACgB;AAA3B,GAAP;AACD;;AAED,OAAO,SAASE,oBAAT,CAA8BC,MAA9B,EAAsC;AACvC,MAAIhB,IAAI,GAAG;AACX,cAAUgB,MADC;AAEX,UAAM3B,YAAY,CAACC,OAAb,CAAqB,KAArB,CAFK;AAGX,aAASD,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHE,GAAX;AAKF,SAAQI,QAAD,IAAc;AACtBZ,IAAAA,KAAK,CAACyB,IAAN,CAAW,YAAUvB,IAAV,GAAe,+BAA1B,EAA2DgB,IAA3D,EACCQ,IADD,CACOC,QAAD,IAAa;AAClBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAO,MAAAA,QAAQ,CAACuB,kBAAkB,CAACR,QAAD,CAAnB,CAAR;AAAuC,KAHxC;AAIE,GALD;AAMH;AAED,OAAO,SAASS,oBAAT,CAA8BF,MAA9B,EAAsC;AAC3C,MAAIhB,IAAI,GAAG;AACX,cAAUgB,MADC;AAEX,UAAM3B,YAAY,CAACC,OAAb,CAAqB,KAArB,CAFK;AAGX,YAAQD,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAHG;AAIX,aAASD,YAAY,CAACC,OAAb,CAAqB,OAArB;AAJE,GAAX;AAMF,SAAQI,QAAD,IAAc;AACpBZ,IAAAA,KAAK,CAACyB,IAAN,CAAW,YAAUvB,IAAV,GAAe,yCAA1B,EAAqEgB,IAArE,EACCQ,IADD,CACOC,QAAD,IAAa;AAClBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAO,MAAAA,QAAQ,CAACuB,kBAAkB,CAACR,QAAD,CAAnB,CAAR;AAAuC,KAHxC;AAIA,GALD;AAMC;;AAED,SAASQ,kBAAT,CAA4BE,UAA5B,EAAwC;AACtCjC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CgC,UAA3C;AACE,SAAO;AAAEvB,IAAAA,IAAI,EAAEhB,SAAR;AAAmBiB,IAAAA,OAAO,EAACsB;AAA3B,GAAP;AACH;;AAED,OAAO,SAASC,YAAT,CAAsBf,IAAtB,EAA4B;AACjCnB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BkB,IAA5B;AACF,SAAQX,QAAD,IAAc;AACpBZ,IAAAA,KAAK,CAACyB,IAAN,CAAW,YAAUvB,IAAV,GAAe,sBAA1B,EAAkDqB,IAAlD,EACCG,IADD,CACOC,QAAD,IAAa;AAClBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAO,MAAAA,QAAQ,CAAC2B,YAAY,CAACZ,QAAD,CAAb,CAAR;AAAiC,KAHlC;AAIA,GALD;AAMC;;AAED,SAASY,YAAT,CAAsBF,UAAtB,EAAkC;AAChCjC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCgC,UAArC;AACE,SAAO;AAAEvB,IAAAA,IAAI,EAAEf,YAAR;AAAsBgB,IAAAA,OAAO,EAACsB;AAA9B,GAAP;AACH","sourcesContent":["import { GET_CART, SET_PRICE, SET_ORDER, DEL_ITEMS, GET_ORDER , ORDER_STATUS} from '../constants/actionsConstants';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\nimport { HOST } from '../constants/host';\r\n\r\nexport function getCartItems() {\r\n  console.log(\"get cart items action \");\r\n  let cartData;\r\n  if (localStorage.getItem('cartItems')) {\r\n    cartData = {\r\n      cartItems: JSON.parse(localStorage.getItem('cartItems'))\r\n    }\r\n    console.log(\"action caritmes\", cartData);\r\n    return (dispatch) => dispatch(updateCartItems(cartData))\r\n  }\r\n}\r\nfunction updateCartItems(cartData) {\r\n  return { type: GET_CART, payload: cartData }\r\n}\r\n\r\n\r\nexport function setPrice(price) {\r\n  console.log(\"set price called \", price);\r\n  let data = {\r\n    'price': price\r\n  }\r\n  return (dispatch) => {\r\n  dispatch(updatePrice(data))\r\n  }\r\n}\r\nfunction updatePrice(data) {\r\n  return { type: SET_PRICE, payload: data.price }\r\n}\r\n\r\n\r\nexport function placeOrder(data) {\r\n  console.log(\"place order \", data);\r\n  let user = cookie.load('cookyou');\r\n  console.log(\"cookyou\", user);\r\n  let body = {\r\n    'cart': data.cartItems,\r\n    'price': data.totalPrice,\r\n    'email': localStorage.getItem(\"email\"),\r\n    'name': localStorage.getItem(\"name\"),\r\n    'owner_id': localStorage.getItem(\"owner_id\"),\r\n    'id': localStorage.getItem(\"_id\"),\r\n    'restaurant_name' : localStorage.getItem(\"restaurant_name\")?localStorage.getItem(\"restaurant_name\"):null,\r\n    'restaurant_id' : localStorage.getItem(\"restaurant_id\")?localStorage.getItem(\"restaurant_id\"):null,\r\n  }\r\n  console.log(\"placing order with body\", body)\r\n  return (dispatch) => {\r\n    axios.post('http://'+HOST+'/morder/placeOrder', body)\r\n      .then((response) =>{ \r\n        console.log(\"order placed\");\r\n        dispatch(updatePlaceOrder(response))})\r\n  }\r\n}\r\n\r\nfunction updatePlaceOrder(data) {\r\n  localStorage.removeItem(\"restaurant_name\");\r\n  localStorage.removeItem(\"restaurant_id\");\r\n  return { type: SET_ORDER, payload: data }\r\n}\r\n\r\n\r\nexport function clearCartItems() {\r\n  let cart= {\r\n   'carItems' :[]\r\n  }\r\n  return (dispatch) => {\r\n     dispatch(deleteCarItems(cart))\r\n  }\r\n}\r\nfunction deleteCarItems(cart) {\r\n  return { type: DEL_ITEMS, payload:cart  }\r\n}\r\n\r\nexport function getOrderDeatilsBuyer(status) {\r\n      let data = {\r\n      'status': status,\r\n      'id': localStorage.getItem(\"_id\"),\r\n      'email': localStorage.getItem(\"email\")\r\n    }\r\n    return (dispatch) => {\r\n   axios.post('http://'+HOST+'/morder/getOrderDeatilsBuyer/', data)\r\n   .then((response) =>{ \r\n    console.log(\"GET BUYER order ACTION\");\r\n    dispatch(updateOrderDeatils(response))})\r\n    }\r\n}\r\n\r\nexport function getOrderDeatilsOwner(status) {\r\n  let data = {\r\n  'status': status,\r\n  'id': localStorage.getItem(\"_id\"),\r\n  'name': localStorage.getItem(\"restaurant_name\"),\r\n  'email': localStorage.getItem(\"email\")\r\n}\r\nreturn (dispatch) => {\r\n axios.post('http://'+HOST+'/morder/getOrderDeatilsOwnerWithStatus/', data)\r\n .then((response) =>{ \r\n  console.log(\"GET order owner action\");\r\n  dispatch(updateOrderDeatils(response))})\r\n}\r\n}\r\n\r\nfunction updateOrderDeatils(returndata) {\r\n  console.log(\"in updateOrderDeatils update\",returndata);\r\n    return { type: GET_ORDER, payload:returndata}\r\n}\r\n\r\nexport function handleStatus(body) {\r\n  console.log(\"handle status\",body)\r\nreturn (dispatch) => {\r\n axios.post('http://'+HOST+'/morder/updateStatus', body)\r\n .then((response) =>{ \r\n  console.log(\"handleStatus order action\");\r\n  dispatch(updateStatus(response))})\r\n}\r\n}\r\n\r\nfunction updateStatus(returndata) {\r\n  console.log(\"in updateStatus update\",returndata);\r\n    return { type: ORDER_STATUS, payload:returndata}\r\n}"]},"metadata":{},"sourceType":"module"}