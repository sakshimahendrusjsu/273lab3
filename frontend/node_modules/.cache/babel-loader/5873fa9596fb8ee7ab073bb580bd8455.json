{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/ChatInput/ChatInput.js\";\nimport React, { Component } from 'react';\nimport './Chat.css';\nimport { connect } from 'react-redux';\nimport History from './ChatHistory';\nimport { updateChat as _updateChat, getChat as _getChat } from '../Redux/actions/messageActions';\n\nvar ChatInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatInput, _Component);\n\n  function ChatInput(props) {\n    var _this;\n\n    _classCallCheck(this, ChatInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatInput).call(this, props));\n\n    _this.sendMessage = function (message) {\n      console.log(\"current chat\", _this.props.chat);\n      console.log('sendMessage', message);\n      var data = {\n        order_id: _this.state.orderId,\n        chat: message\n      };\n\n      _this.props.updateChat(data);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var message = _this.refs.txtMessage.value;\n\n      if (message.length === 0) {\n        return;\n      }\n\n      var messageObj = {\n        Who: _this.state.userID,\n        What: message,\n        When: new Date().valueOf(),\n        userId: _this.state.id\n      };\n\n      _this.sendMessage(messageObj); // Clear the input field and set focus\n\n\n      _this.refs.txtMessage.value = '';\n\n      _this.refs.txtMessage.focus();\n    };\n\n    _this.state = {\n      orderId: props.location.state.orderId,\n      userID: props.location.state.userId,\n      userID2: props.location.state.userId2,\n      id: props.location.state.id,\n      imgURL: '//robohash.org/' + props.location.state.userId + '?set=set2&bgset=bg2&size=70x70'\n    };\n    return _this;\n  }\n\n  _createClass(ChatInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"order id\", this.state.orderId);\n      localStorage.setItem(\"restaurant_name\", this.state.orderId.restaurant_name);\n      localStorage.setItem(\"restaurant_id\", this.state.orderId.restaurant_id);\n      this.refs.txtMessage.focus();\n      this.renderMyData();\n    }\n  }, {\n    key: \"renderMyData\",\n    value: function () {\n      var _renderMyData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.props.getChat(this.state.orderId._id);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function renderMyData() {\n        return _renderMyData.apply(this, arguments);\n      }\n\n      return renderMyData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        class: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"GRUBHUB\"), React.createElement(\"a\", {\n        style: {\n          position: 'absolute',\n          right: 0\n        },\n        href: \"/order\",\n        class: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"BACK\"), React.createElement(\"div\", {\n        class: \"header-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chip2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Welcome \", this.state.userID, \"!! Thankyou for contacting GRUBHUB!! \")), React.createElement(\"link\", {\n        rel: \"stylsheet\",\n        type: \"text/css\",\n        href: \"//fonts.googleapis.com/icon?family=Material+Icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/css/materialize.min.css\",\n        media: \"screen,projection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(History, {\n        orderId: this.state.orderId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        className: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"container\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"prefix mdi-communication-chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: \"txtMessage\",\n        type: \"text\",\n        placeholder: \"Type your message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"chip left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imgURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.userID, \" #\", this.state.id))), React.createElement(\"div\", {\n        className: \"input-field col s2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"waves-effect waves-light btn-floating btn-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi-content-send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return ChatInput;\n}(Component);\n\nfunction mapStateToProps(store) {\n  return {\n    output: store.msg.ouput,\n    message: store.msg.message,\n    chat: store.msg.chat\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getChat: function getChat(data) {\n      return dispatch(_getChat(data));\n    },\n    updateChat: function updateChat(data) {\n      return dispatch(_updateChat(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatInput);","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/ChatInput/ChatInput.js"],"names":["React","Component","connect","History","updateChat","getChat","ChatInput","props","sendMessage","message","console","log","chat","data","order_id","state","orderId","onSubmit","e","preventDefault","refs","txtMessage","value","length","messageObj","Who","userID","What","When","Date","valueOf","userId","id","focus","location","userID2","userId2","imgURL","localStorage","setItem","restaurant_name","restaurant_id","renderMyData","_id","position","right","mapStateToProps","store","output","msg","ouput","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Chat.css';\r\nimport { connect } from 'react-redux';\r\nimport History from './ChatHistory';\r\nimport { updateChat,getChat } from '../Redux/actions/messageActions';\r\n\r\n\r\n\r\nclass ChatInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  this.state = {\r\n    orderId : props.location.state.orderId,\r\n    userID: props.location.state.userId,\r\n    userID2 : props.location.state.userId2,\r\n    id: props.location.state.id,\r\n    imgURL:'//robohash.org/' + props.location.state.userId + '?set=set2&bgset=bg2&size=70x70'\r\n  };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"order id\",this.state.orderId);\r\n    localStorage.setItem(\"restaurant_name\",this.state.orderId.restaurant_name);\r\n    localStorage.setItem(\"restaurant_id\",this.state.orderId.restaurant_id);\r\n    this.refs.txtMessage.focus();\r\n    this.renderMyData();\r\n  }\r\n\r\n  async renderMyData() {\r\n    await this.props.getChat(this.state.orderId._id);\r\n}\r\n\r\n  sendMessage = (message) => {\r\n    console.log(\"current chat\",this.props.chat)\r\n    console.log('sendMessage', message);\r\n  let data ={\r\n    order_id : this.state.orderId,\r\n    chat : message\r\n  }\r\n  this.props.updateChat(data)\r\n\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const message = this.refs.txtMessage.value;\r\n    if (message.length === 0) {\r\n    return;\r\n    }\r\n    const messageObj = {\r\n      Who: this.state.userID,\r\n      What: message,\r\n      When: new Date().valueOf(),\r\n      userId: this.state.id\r\n    };\r\n    this.sendMessage(messageObj);\r\n    // Clear the input field and set focus\r\nthis.refs.txtMessage.value = '';\r\nthis.refs.txtMessage.focus()\r\n  };\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <div class=\"header\">\r\n          <a href=\"/\" class=\"logo\">GRUBHUB</a>\r\n          <a style={{position: 'absolute', right: 0}} href=\"/order\" class=\"logo\">BACK</a>\r\n          <div class=\"header-right\">\r\n          </div>\r\n        </div>\r\n        <div>\r\n        <span className=\"chip2\">Welcome {this.state.userID}!! Thankyou for contacting GRUBHUB!! </span>\r\n        </div>\r\n        <link rel=\"stylsheet\" type=\"text/css\" href=\"//fonts.googleapis.com/icon?family=Material+Icons\" />\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/css/materialize.min.css\" media=\"screen,projection\" />\r\n        <History orderId={this.state.orderId}/>\r\n        <footer className=\"teal\"> \r\n        <form className=\"container\" onSubmit={this.onSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s10\">\r\n              <i className=\"prefix mdi-communication-chat\" />\r\n              <input ref=\"txtMessage\" type=\"text\" placeholder=\"Type your message\" />\r\n              <span className=\"chip left\">\r\n                <img src={this.state.imgURL} />\r\n                <span>{this.state.userID} #{this.state.id}</span>\r\n              </span>\r\n            </div>\r\n           \r\n            <div className=\"input-field col s2\">\r\n              <button type=\"submit\" className=\"waves-effect waves-light btn-floating btn-large\">\r\n                <i className=\"mdi-content-send\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </footer>\r\n      </div>);\r\n    }\r\n  }\r\n\r\n  function mapStateToProps(store) {\r\n    return {\r\n        output: store.msg.ouput,\r\n        message: store.msg.message,\r\n        chat: store.msg.chat,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getChat: (data) => dispatch(getChat(data)),\r\n        updateChat: (data)=> dispatch(updateChat(data)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatInput)"]},"metadata":{},"sourceType":"module"}