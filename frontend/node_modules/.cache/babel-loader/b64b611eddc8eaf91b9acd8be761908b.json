{"ast":null,"code":"import _classCallCheck from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/ChatInput/ChatHistory.js\";\nimport * as React from 'react';\nimport './Chat.css';\nimport { connect } from 'react-redux';\n\nvar ChatHistory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatHistory, _React$Component);\n\n  function ChatHistory(props) {\n    var _this;\n\n    _classCallCheck(this, ChatHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatHistory).call(this, props));\n    console.log(\"this.props.chat in history \", _this.props.chat);\n    return _this;\n  }\n\n  _createClass(ChatHistory, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"chat history\", this.props.chat);\n\n      if (this.props.chat != undefined && this.props.chat.length > 0) {\n        return React.createElement(\"ul\", {\n          className: \"collection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, this.props.chat.map(function (messageObj) {\n          var imgURL = '//robohash.org/' + messageObj.Who + '?set=set2&bgset=bg2&size=70x70';\n          var messageDate = new Date(messageObj.When);\n          var messageDateTime = messageDate.toLocaleDateString() + ' at ' + messageDate.toLocaleTimeString();\n          return React.createElement(\"li\", {\n            className: \"collection-item avatar\",\n            key: messageObj.When,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: imgURL,\n            alt: messageObj.id,\n            className: \"circle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, messageObj.Who, \" #\", messageObj.id), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"prefix mdi-action-alarm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"message-date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, messageDateTime), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, messageObj.What)));\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ChatHistory;\n}(React.Component);\n\nfunction mapStateToProps(store) {\n  return {\n    chat: store.msg.chat\n  };\n}\n\nexport default connect(mapStateToProps)(ChatHistory);","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/ChatInput/ChatHistory.js"],"names":["React","connect","ChatHistory","props","console","log","chat","undefined","length","map","messageObj","imgURL","Who","messageDate","Date","When","messageDateTime","toLocaleDateString","toLocaleTimeString","id","What","Component","mapStateToProps","store","msg"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0C,MAAKF,KAAL,CAAWG,IAArD;AAFiB;AAGhB;;;;6BAEM;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKF,KAAL,CAAWG,IAAtC;;AACA,UAAG,KAAKH,KAAL,CAAWG,IAAX,IAAiBC,SAAjB,IAA8B,KAAKJ,KAAL,CAAWG,IAAX,CAAgBE,MAAhB,GAAuB,CAAxD,EAA0D;AAC1D,eAEA;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,KAAKL,KAAL,CAAWG,IAAX,CAAgBG,GAAhB,CAAoB,UAACC,UAAD,EAAgB;AAClC,cAAMC,MAAM,GAAG,oBAAoBD,UAAU,CAACE,GAA/B,GAAqC,gCAApD;AACA,cAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASJ,UAAU,CAACK,IAApB,CAApB;AACA,cAAMC,eAAe,GAAGH,WAAW,CAACI,kBAAZ,KACtB,MADsB,GACbJ,WAAW,CAACK,kBAAZ,EADX;AAEC,iBAAO;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAuC,YAAA,GAAG,EAAGR,UAAU,CAACK,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACP;AAAK,YAAA,GAAG,EAAGJ,MAAX;AAAoB,YAAA,GAAG,EAAGD,UAAU,CAACS,EAArC;AAA0C,YAAA,SAAS,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,EAEP;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBT,UAAU,CAACE,GAApC,QAA4CF,UAAU,CAACS,EAAvD,CAFO,EAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCH,eAAjC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQN,UAAU,CAACU,IAAnB,CAJF,CAHO,CAAP;AAUJ,SAfC,CADN,CAFA;AAqBE;;AACD,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA;;;;EAhCqBpB,KAAK,CAACqB,S;;AAmChC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACHjB,IAAAA,IAAI,EAAEiB,KAAK,CAACC,GAAN,CAAUlB;AADb,GAAP;AAGD;;AAED,eAAeL,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,WAAzB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport './Chat.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ChatHistory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"this.props.chat in history \",this.props.chat);\r\n    }\r\n      \r\n  render() { \r\n    console.log(\"chat history\",this.props.chat); \r\n    if(this.props.chat!=undefined && this.props.chat.length>0){\r\n    return (\r\n    \r\n    <ul className=\"collection\">\r\n         {this.props.chat.map((messageObj) => {\r\n            const imgURL = '//robohash.org/' + messageObj.Who + '?set=set2&bgset=bg2&size=70x70';\r\n            const messageDate = new Date(messageObj.When);\r\n            const messageDateTime = messageDate.toLocaleDateString() +\r\n              ' at ' + messageDate.toLocaleTimeString();\r\n             return(<li className=\"collection-item avatar\" key={ messageObj.When }>\r\n             <img src={ imgURL } alt={ messageObj.id } className=\"circle\" />\r\n             <span className=\"title\">{messageObj.Who} #{ messageObj.id }</span>\r\n             <p>\r\n               <i className=\"prefix mdi-action-alarm\" />\r\n               <span className=\"message-date\">{ messageDateTime }</span>\r\n               <br />\r\n               <span>{ messageObj.What }</span>\r\n             </p>\r\n           </li>\r\n     ); })\r\n         }\r\n         </ul>);\r\n     } \r\n     return (<div></div>); \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n      chat: store.msg.chat,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatHistory)"]},"metadata":{},"sourceType":"module"}