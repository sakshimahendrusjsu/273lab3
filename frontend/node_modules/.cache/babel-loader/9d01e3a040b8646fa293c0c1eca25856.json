{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateEmail( $email: String, $firstName: String, $lastName: String,$user_type: String)\\n     {  updateUserEmail( email: $email,firstName : $firstName, lastName : $lastName\\n    ) {\\n      email\\n      firstName\\n      lastName\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateUserName( $email: String, $firstName: String, $lastName: String,$user_type: String)\\n     {  updateUserName( email: $email,firstName : $firstName, lastName : $lastName\\n    ) {\\n      email\\n      firstName\\n      lastName\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addUser($firstName: String, $lastName: String, $email: String, $password: String, \\n    $user_type: String,$restaurant_name:String) {\\n      addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password,\\n       user_type: $user_type,restaurant_name:$restaurant_name) {\\n      firstName\\n      lastName\\n      email\\n      user_type\\n      phone\\n      restaurant_name\\n      zipcode\\n       }\\n      }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost'; // Creating a new user through sign up\n\nvar newUserMutation = gql(_templateObject()); // Updating user profile Name\n\nvar updateUserName = gql(_templateObject2()); // Updating user profile Email\n\nvar updateUserEmail = gql(_templateObject3());\nexport { newUserMutation, updateUserName };","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/mutation/mutations.js"],"names":["gql","newUserMutation","updateUserName","updateUserEmail"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB,C,CAEA;;AACA,IAAMC,eAAe,GAAGD,GAAH,mBAArB,C,CAgBA;;AACA,IAAME,cAAc,GAAGF,GAAH,oBAApB,C,CAWA;;AACA,IAAMG,eAAe,GAAGH,GAAH,oBAArB;AAaA,SAASC,eAAT,EAAyBC,cAAzB","sourcesContent":["import { gql } from 'apollo-boost';\n\n// Creating a new user through sign up\nconst newUserMutation = gql`\n  mutation addUser($firstName: String, $lastName: String, $email: String, $password: String, \n    $user_type: String,$restaurant_name:String) {\n      addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password,\n       user_type: $user_type,restaurant_name:$restaurant_name) {\n      firstName\n      lastName\n      email\n      user_type\n      phone\n      restaurant_name\n      zipcode\n       }\n      }\n`;\n\n// Updating user profile Name\nconst updateUserName = gql`\n  mutation updateUserName( $email: String, $firstName: String, $lastName: String,$user_type: String)\n     {  updateUserName( email: $email,firstName : $firstName, lastName : $lastName\n    ) {\n      email\n      firstName\n      lastName\n    }\n  }\n`;\n\n// Updating user profile Email\nconst updateUserEmail = gql`\n  mutation updateEmail( $email: String, $firstName: String, $lastName: String,$user_type: String)\n     {  updateUserEmail( email: $email,firstName : $firstName, lastName : $lastName\n    ) {\n      email\n      firstName\n      lastName\n    }\n  }\n`;\n\n\n\nexport { newUserMutation,updateUserName };\n"]},"metadata":{},"sourceType":"module"}