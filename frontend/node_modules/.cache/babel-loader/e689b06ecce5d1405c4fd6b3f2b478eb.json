{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query profileOwner($email: String) {\\n    profileOwner(email: $email) {\\n      firstName\\n      lastName\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query profile($email: String) {\\n    profile(email: $email) {\\n      firstName\\n      lastName\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query login($email: String, $password: String,  $user_type : String) {\\n    login(email: $email, password: $password, user_type : $user_type) {\\n      email,\\n      user_type\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import { gql } from 'apollo-boost';\nimport gql from \"graphql-tag\"; // Login an existing user\n\nexport var getLoginQuery = gql(_templateObject()); // Show profile\n\nvar getProfileQuery = gql(_templateObject2()); // Show profile owner\n\nvar getProfileOwnerQuery = gql(_templateObject3());","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/queries/queries.js"],"names":["gql","getLoginQuery","getProfileQuery","getProfileOwnerQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAGD,GAAH,mBAAnB,C,CASP;;AACA,IAAME,eAAe,GAAGF,GAAH,oBAArB,C,CAUA;;AACA,IAAMG,oBAAoB,GAAGH,GAAH,oBAA1B","sourcesContent":["// import { gql } from 'apollo-boost';\nimport gql from \"graphql-tag\";\n\n// Login an existing user\nexport const getLoginQuery = gql`\n  query login($email: String, $password: String,  $user_type : String) {\n    login(email: $email, password: $password, user_type : $user_type) {\n      email,\n      user_type\n    }\n  }\n`;\n\n// Show profile\nconst getProfileQuery = gql`\n  query profile($email: String) {\n    profile(email: $email) {\n      firstName\n      lastName\n      email\n    }\n  }\n`;\n\n// Show profile owner\nconst getProfileOwnerQuery = gql`\n  query profileOwner($email: String) {\n    profileOwner(email: $email) {\n      firstName\n      lastName\n      email\n    }\n  }\n`;\n\n"]},"metadata":{},"sourceType":"module"}