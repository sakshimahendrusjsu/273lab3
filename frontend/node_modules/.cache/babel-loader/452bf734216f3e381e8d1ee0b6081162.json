{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation updateUser(\\n    $email: String\\n    $aboutMe: String\\n    $city: String\\n    $country: String\\n    $school: String\\n    $hometown: String\\n    $languages: String\\n    $gender: String\\n    $company: String\\n  ) {\\n    updateUser(\\n      email: $email\\n      aboutMe: $aboutMe\\n      city: $city\\n      country: $country\\n      school: $school\\n      hometown: $hometown\\n      languages: $languages\\n      gender: $gender\\n      company: $company\\n    ) {\\n      email\\n      aboutMe\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createCourse(\\n    $id: String\\n    $courseName: String\\n    $facultyEmail: String\\n    $description: String\\n    $department: String\\n    $room: String\\n    $capacity: Number\\n    $waitlist: Number\\n    $term: String\\n  ) {\\n    createCourse(\\n      id: $id\\n      courseName: $courseName\\n      facultyEmail: $facultyEmail\\n      description: $description\\n      department: $department\\n      room: $room\\n      capacity: $capacity\\n      waitlist: $waitlist\\n      term: $term\\n    ) {\\n      facultyEmail\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation enrollCourse($email: String, $id: String) {\\n    enrollCourse(email: $email, id: $id) {\\n      email\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation newUser($firstName: String, $lastName: String, $email: String, $password: String, $user_type: String,\\n    $phone :String, $restaurant_name:String,$zipcode:String) {\\n      newUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password,\\n       user_type: $user_type,phone:$phone,$restaurant_name:restaurant_name,$zipcode:zipcode) {\\n      firstName\\n      lastName\\n      email\\n      user_type\\n      phone\\n      restaurant_name\\n      zipcode\\n       }\\n      }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"./node_modules/apollo-boost\"; // Creating a new user through sign up\n\nconst newUserMutation = gql(_templateObject()); // Enrolling into a course\n\nconst enrollCourse = gql(_templateObject2()); // Creating a new course - by faculty\n\nconst createCourse = gql(_templateObject3()); // Updating user profile details\n\nconst updateUser = gql(_templateObject4());\nexport { newUserMutation, enrollCourse, createCourse, updateUser };","map":{"version":3,"sources":["/Users/sakshi/Documents/AllCodes/React/273/lab/frontend/src/mutation/mutations.js"],"names":["gql","newUserMutation","enrollCourse","createCourse","updateUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,6BAApB,C,CAEA;;AACA,MAAMC,eAAe,GAAGD,GAAH,mBAArB,C,CAgBA;;AACA,MAAME,YAAY,GAAGF,GAAH,oBAAlB,C,CASA;;AACA,MAAMG,YAAY,GAAGH,GAAH,oBAAlB,C,CA6BA;;AACA,MAAMI,UAAU,GAAGJ,GAAH,oBAAhB;AA6BA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,YAAxC,EAAsDC,UAAtD","sourcesContent":["import { gql } from \"./node_modules/apollo-boost\";\n\n// Creating a new user through sign up\nconst newUserMutation = gql`\n  mutation newUser($firstName: String, $lastName: String, $email: String, $password: String, $user_type: String,\n    $phone :String, $restaurant_name:String,$zipcode:String) {\n      newUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password,\n       user_type: $user_type,phone:$phone,$restaurant_name:restaurant_name,$zipcode:zipcode) {\n      firstName\n      lastName\n      email\n      user_type\n      phone\n      restaurant_name\n      zipcode\n       }\n      }\n`;\n\n// Enrolling into a course\nconst enrollCourse = gql`\n  mutation enrollCourse($email: String, $id: String) {\n    enrollCourse(email: $email, id: $id) {\n      email\n      id\n    }\n  }\n`;\n\n// Creating a new course - by faculty\nconst createCourse = gql`\n  mutation createCourse(\n    $id: String\n    $courseName: String\n    $facultyEmail: String\n    $description: String\n    $department: String\n    $room: String\n    $capacity: Number\n    $waitlist: Number\n    $term: String\n  ) {\n    createCourse(\n      id: $id\n      courseName: $courseName\n      facultyEmail: $facultyEmail\n      description: $description\n      department: $department\n      room: $room\n      capacity: $capacity\n      waitlist: $waitlist\n      term: $term\n    ) {\n      facultyEmail\n      id\n    }\n  }\n`;\n\n// Updating user profile details\nconst updateUser = gql`\n  mutation updateUser(\n    $email: String\n    $aboutMe: String\n    $city: String\n    $country: String\n    $school: String\n    $hometown: String\n    $languages: String\n    $gender: String\n    $company: String\n  ) {\n    updateUser(\n      email: $email\n      aboutMe: $aboutMe\n      city: $city\n      country: $country\n      school: $school\n      hometown: $hometown\n      languages: $languages\n      gender: $gender\n      company: $company\n    ) {\n      email\n      aboutMe\n    }\n  }\n`;\n\nexport { newUserMutation, enrollCourse, createCourse, updateUser };\n"]},"metadata":{},"sourceType":"module"}